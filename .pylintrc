[MASTER]
# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=

# Use multiple processes to speed up Pylint.
jobs=2

[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED
confidence=

# Disable the message, report, category or checker with the given id(s).
# default disable:
#   disable=import-star-module-level,old-octal-literal,oct-method,print-statement,unpacking-in-except,parameter-unpacking,backtick,old-raise-syntax,old-ne-operator,long-suffix,dict-view-method,dict-iter-method,metaclass-assignment,next-method-called,raising-string,indexing-exception,raw_input-builtin,long-builtin,file-builtin,execfile-builtin,coerce-builtin,cmp-builtin,buffer-builtin,basestring-builtin,apply-builtin,filter-builtin-not-iterating,using-cmp-argument,useless-suppression,range-builtin-not-iterating,suppressed-message,no-absolute-import,old-division,cmp-method,reload-builtin,zip-builtin-not-iterating,intern-builtin,unichr-builtin,reduce-builtin,standarderror-builtin,unicode-builtin,xrange-builtin,coerce-method,delslice-method,getslice-method,setslice-method,input-builtin,round-builtin,hex-method,nonzero-method,map-builtin-not-iterating
# our disable:
disable=C0330,C1001,C0103,1136,R0904,R0902,R0101,R0912,R0914

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html.
output-format=colorized

# Tells whether to display a full report or only the messages
reports=yes

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

[BASIC]

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,__init__

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Include a hint for the correct naming format with invalid-name
include-naming-hint=yes

# List of decorators that produce properties, such as abc.abstractproperty. Add
# to this list to register other decorators that produce valid properties.
property-classes=abc.abstractproperty

# Regular expression matching correct function names
function-rgx=_?_?[a-z][A-Za-z0-9]{1,30}$

# Naming hint for function names
function-name-hint=_?_?[a-z][A-Za-z0-9]{1,30}$

# Regular expression matching correct variable names
variable-rgx=_?[a-z][A-Za-z0-9]{1,30}$

# Naming hint for variable names
variable-name-hint=_?[a-z][A-Za-z0-9]{1,30}$

# Regular expression matching correct constant names
const-rgx=[A-Z][A-Za-z0-9]{1,30}$

# Naming hint for constant names
const-name-hint=[A-Z][A-Za-z0-9]{1,30}$

# Regular expression matching correct attribute names
attr-rgx=_?[a-z][A-Za-z0-9]{1,30}$

# Naming hint for attribute names
attr-name-hint=_?[a-z][A-Za-z0-9]{1,30}$

# Regular expression matching correct argument names
argument-rgx=_?[a-z][A-Za-z0-9]{1,30}$

# Naming hint for argument names
argument-name-hint=_?[a-z][A-Za-z0-9]{1,30}$

# Regular expression matching correct class attribute names
class-attribute-rgx=_?_?[a-z][A-Za-z0-9]{1,30}$

# Naming hint for class attribute names
class-attribute-name-hint=_?_?[a-z][A-Za-z0-9]{1,30}$

# Regular expression matching correct inline iteration names
inlinevar-rgx=_?[a-z][A-Za-z0-9]{1,30}$

# Naming hint for inline iteration names
inlinevar-name-hint=_?[a-z][A-Za-z0-9]{1,30}$

# Regular expression matching correct class names
class-rgx=_?[a-z]*[A-Za-z0-9]*

# Naming hint for class names
class-name-hint=_?[a-z]*[A-Za-z0-9]*

# Regular expression matching correct module names
module-rgx=_?[a-z]*[A-Za-z0-9]*

# Naming hint for module names
module-name-hint=_?[a-z]*[A-Za-z0-9]*

# Regular expression matching correct method names
method-rgx=_?_?[a-z][A-Za-z0-9]{1,30}$

# Naming hint for method names
method-name-hint=_?_?[a-z][A-Za-z0-9]{1,30}$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1


[ELIF]

# Maximum number of nested blocks for function / method body
max-nested-blocks=5


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=100

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=yes

# List of optional constructs for which whitespace checking is disabled. `dict-
# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\n222: 2}.
# `trailing-comma` allows a space between comma and closing bracket: (a, ).
# `empty-line` allows space-only lines.
no-space-check=trailing-comma,dict-separator

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1
# tab).
indent-string='    '


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes


[VARIABLES]

# List of strings which can identify a callback function by name. A callback
# name must start or end with one of those strings.
callbacks=cb_,_cb


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs

# List of member names, which should be excluded from the protected access
# warning.
exclude-protected=_asdict,_fields,_replace,_source,_make


[TYPECHECK]
ignored-modules=igraph


[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

# Maximum number of boolean expressions in a if statement
max-bool-expr=5


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Analyse import fallback blocks. This can be used to support both Python 2 and
# 3 compatible code, which means that the block might have code that exists
# only in one or another interpreter, leading to false positives when analysed.
analyse-fallback-blocks=no


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
